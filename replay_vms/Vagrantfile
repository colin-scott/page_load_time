# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

ENV["VAGRANT_HOME"] = "/userdata/.vagrant.d"
puts  ENV["VAGRANT_HOME"]

if not File.exist? "/root/.ssh/tmp_vagrant_key"
  puts "Please create a temporary ssh key at ~/.ssh/tmp_vagrant_key, with "
  puts "ssh-keygen -t rsa"
  puts %{echo "Host remotehost" >> ~/.ssh/config}
  puts %{echo "    IdentityFile ~/.ssh/tmp_vagrant_key" >> ~/.ssh/config}
  exit 1
end

pub_key = File.read("/root/.ssh/tmp_vagrant_key.pub").chomp

# Global provisioning.  This stuff is needed on all machines
$globalscript = <<GLOBALSCRIPT
    echo "#"
    echo "# BEGIN Global Provisioning"
    echo "#"
    sudo apt-get update
    sudo apt-get install --assume-yes python ruby git libicu48
    git clone https://github.com/colin-scott/page_load_time.git
    cd page_load_time
    cd analysis && git clone https://github.com/colin-scott/web-page-replay.git wpr
    sudo chown -R vagrant:vagrant /home/vagrant/page_load_time
    sudo echo "US/Pacific" > /etc/timezone
    sudo dpkg-reconfigure -f noninteractive tzdata
    cd /home/vagrant
    mkdir -p local/src/
    cd local/src
    wget 'https://bitbucket.org/ariya/phantomjs/downloads/phantomjs-1.9.8-linux-x86_64.tar.bz2'
    tar -xjf phantomjs-1.9.8-linux-x86_64.tar.bz2
    cd ..
    mkdir -p bin
    cd bin
    ln -s /home/vagrant/local/src/phantomjs-1.9.8-linux-x86_64/bin/phantomjs .
    echo "export PATH=$PATH:/home/vagrant/local/bin" >> /home/vagrant/.bashrc
    echo "Inserting Public Key"
    mkdir -p /home/vagrant/.ssh
    echo "#{pub_key}" >> /home/vagrant/.ssh/authorized_keys
    echo "#"
    echo "# END Global Provisioning"
    echo "#"
GLOBALSCRIPT

# What we want started up
nodes = [
  { :hostname => 'slave2', :ip => '10.9.1.2'},
  { :hostname => 'slave3', :ip => '10.9.1.3'},
  { :hostname => 'slave4', :ip => '10.9.1.4'},
  { :hostname => 'slave5', :ip => '10.9.1.5'}
]

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # setup et/host on boxes
  #config.hostmanager.enabled = true

  nodes.each do |node|
    config.vm.define node[:hostname] do |node_config|

      node_config.vm.hostname = node[:hostname]
      #node_config.hostmanager.aliases = node[:hostname]

      node_config.vm.network :private_network, ip: node[:ip]

      # default memory to 1G, allow hosts[] hash to override
      memory = node[:mem] ? node[:mem] : 1024;

      node_config.vm.provider :virtualbox do |vb, override|
        vb.customize ['modifyvm', :id, '--memory', memory.to_s ]
        override.vm.box = 'ubuntu'
      end

      # This will now run on _ALL_ the below defined virtual machines first
      node_config.vm.provision :shell, inline: $globalscript
    end
  end
end
